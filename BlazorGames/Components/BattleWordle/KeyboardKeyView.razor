@using BlazorGames.Models.BattleWordle;

<div class="keyboard-key keyboard-key-@BestLetterResult" @onclick="HandleClick">@Letter</div>

@code {
	public LetterResult BestLetterResult { get { return CalculateBestLetterResult(); } }
	[Parameter] public char Letter { get; set; }
	[Parameter] public required IEnumerable<GuessResult> GuessResults { get; set; }
	[Parameter] public EventCallback<char> OnClickEventCallback { get; set; }

	protected override async void OnParametersSet()
	{
		base.OnParametersSet();
		while(true)
		{
			await Task.Delay(1000);
			StateHasChanged();
		}
	}

	private async Task HandleClick()
	{
		await OnClickEventCallback.InvokeAsync(Letter);
	}

	private LetterResult CalculateBestLetterResult()
	{
		LetterResult bestLetterResult = LetterResult.NotEvaluated;
		foreach (GuessResult guessResult in GuessResults)
		{
			if (!guessResult.HasBeenRevealedToPlayer)
			{
				continue;
			}

			for (int letterIndex = 0; letterIndex < guessResult.GuessedWord.Length; letterIndex++)
			{
				if (guessResult.GuessedWord[letterIndex] != Letter)
				{
					continue;
				}
				LetterResult thisLetterResult = guessResult.LetterResults[letterIndex];
				if ((int)thisLetterResult > (int)bestLetterResult)
				{
					bestLetterResult = thisLetterResult;
				}
			}
		}
		return bestLetterResult;
	}
}